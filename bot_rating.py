from telebot import TeleBot, types  # –ø–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å
from config_rating import token
import logic_rating
import os
import time

bot = TeleBot(token)  # —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ —Å –Ω–∞—à–∏–º –∫–ª—é—á–æ–º (—Ç–æ–∫–µ–Ω–æ–º)

#
# –°–ª–µ–¥—É—é—â–∞—è —á–∞—Å—Ç—å –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#

@bot.message_handler(func=lambda message: int(message.chat.id)<0)
def error_in_chat(message):
    bot.send_message(message.chat.id,
                     '–í—ã–∑–æ–≤ –¥–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞ –≤ —á–∞—Ç–∞—Ö –∑–∞–ø—Ä–µ—â—ë–Ω')

@bot.message_handler(commands=['start'])  # —Ö—ç–Ω–¥–ª–µ—Ä –æ–Ω –∂–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—á–∏–∫ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
def start(message):
    if logic_rating.get_user_status(message.from_user.id) == 0:
        logic_rating.set_user_status(message.from_user.id, 1)
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(*logic_rating.names())
        logic_rating.save_delete_message(message.from_user.id, bot.send_message(message.from_user.id, '–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!', reply_markup=keyboard).message_id)
    elif logic_rating.get_user_status(message.from_user.id) == 25:
        keyboard = types.InlineKeyboardMarkup(row_width=2)
        keyboard.add(*logic_rating.names())
        keyboard.add(types.InlineKeyboardButton(text='–†–µ–∑—É–ª—å—Ç–∞—Ç —É—Ä–æ–∫–∞', callback_data=-25))
        logic_rating.save_delete_message(message.from_user.id,
                                         bot.send_message(message.from_user.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —É—á–∏—Ç–µ–ª—å! –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã!',
                                                          reply_markup=keyboard).message_id)

@bot.callback_query_handler(func=lambda c: True)
def inline(c):
    if logic_rating.get_user_status(c.message.chat.id) < 2:
        logic_rating.save_id(c.message.chat.id, c.data)
        bot.send_message(c.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ")
        try:
            bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
        except:
            pass
        logic_rating.set_user_status(c.message.chat.id, 2)
        keyboard_names = types.InlineKeyboardMarkup(row_width=1)
        keyboard_names.add(*logic_rating.buttons(c.message.chat.id))
        logic_rating.save_delete_message(c.message.chat.id, bot.send_message(c.message.chat.id, "–í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏.",
                                                      reply_markup=keyboard_names).message_id)
    elif logic_rating.get_user_status(c.message.chat.id) == 2:
        if logic_rating.get_student_status(c.data) == 0:
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
            except:
                pass
            logic_rating.set_user_status(c.message.chat.id, 3)
            keyboard_names = types.InlineKeyboardMarkup(row_width=1)
            keyboard_names.add(*logic_rating.save(c.message.chat.id, c.data))
            keyboard_names.add(types.InlineKeyboardButton(text='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', callback_data=-5))
            logic_rating.save_delete_message(c.message.chat.id, bot.send_message(c.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ",
                         reply_markup=keyboard_names).message_id)
        else:
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
            except:
                pass
            keyboard_names = types.InlineKeyboardMarkup(row_width=1)
            keyboard_names.add(*logic_rating.buttons(c.message.chat.id))
            logic_rating.save_delete_message(c.message.chat.id, bot.send_message(c.message.chat.id, "–ò–∑–≤–∏–Ω–∏, –∫—Ç–æ-—Ç–æ —É–∂–µ –≤—ã–±—Ä–∞–ª –µ–≥–æ –¥–ª—è –æ—Ü–µ–Ω–∏–≤–∞–Ω–∏—è. –í—ã–±–µ—Ä–∏ –æ–¥–Ω–æ–∫–ª–∞—Å—Å–Ω–∏–∫–∞ –¥–ª—è –æ—Ü–µ–Ω–∫–∏.",
                             reply_markup=keyboard_names).message_id)
    elif logic_rating.get_user_status(c.message.chat.id) == 3:
        if int(c.data) != -5:
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
            except:
                pass
            keyboard_names = types.InlineKeyboardMarkup(row_width=1)
            keyboard_names.add(*logic_rating.save_student(c.message.chat.id, c.data))
            keyboard_names.add(types.InlineKeyboardButton(text='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', callback_data=-5))
            logic_rating.save_delete_message(c.message.chat.id, bot.send_message(c.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ",
                         reply_markup=keyboard_names).message_id)
        else:
            logic_rating.set_user_status(c.message.chat.id, 4)
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
            except:
                pass
            keyboard_names = types.InlineKeyboardMarkup(row_width=1)
            keyboard_names.add(*logic_rating.save(c.message.chat.id, c.data))
            keyboard_names.add(types.InlineKeyboardButton(text='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', callback_data=-5))
            logic_rating.save_delete_message(c.message.chat.id, bot.send_message(c.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç–µ–ø–µ—Ä—å –æ—Ü–µ–Ω–∏ —Å–µ–±—è!",
                         reply_markup=keyboard_names).message_id)
    elif logic_rating.get_user_status(c.message.chat.id) == 4:
        if int(c.data) != -5:
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
            except:
                pass
            keyboard_names = types.InlineKeyboardMarkup(row_width=1)
            keyboard_names.add(*logic_rating.save_self(c.message.chat.id, c.data))
            keyboard_names.add(types.InlineKeyboardButton(text='–°–æ—Ö—Ä–∞–Ω–∏—Ç—å', callback_data=-5))
            logic_rating.save_delete_message(c.message.chat.id, bot.send_message(c.message.chat.id, "–û—Ç–ª–∏—á–Ω–æ, –∞ —Ç–µ–ø–µ—Ä—å –æ—Ü–µ–Ω–∏ —Å–µ–±—è!",
                         reply_markup=keyboard_names).message_id)
        else:
            logic_rating.set_user_status(c.message.chat.id, 5)
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
            except:
                pass
            bot.send_message(c.message.chat.id, "–°–ø–∞—Å–∏–±–æ! –ù–∞ —ç—Ç–æ–º –≤—Å—ë üèÜ")
    elif logic_rating.get_user_status(c.message.chat.id) == 25:
        if c.data != '-25':
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id), chat_id=c.message.chat.id)
            except:
                pass
            keyboard = types.InlineKeyboardMarkup(row_width=2)
            keyboard.add(*logic_rating.names_and_marks(c.data))
            keyboard.add(types.InlineKeyboardButton(text='–†–µ–∑—É–ª—å—Ç–∞—Ç —É—Ä–æ–∫–∞', callback_data=-25))
            logic_rating.save_delete_message(c.message.chat.id,
                                             bot.send_message(c.message.chat.id,
                                                              '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, —É—á–∏—Ç–µ–ª—å! –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –±–∞–ª–ª—ã!',
                                                              reply_markup=keyboard).message_id)
        else:
            logic_rating.set_user_status(c.message.chat.id, 25)
            try:
                bot.delete_message(message_id=logic_rating.get_delete_message(c.message.chat.id),
                                   chat_id=c.message.chat.id)
            except:
                pass
            s = logic_rating.result()
            bot.send_message(c.message.chat.id, s)

while True:
    try:
        bot.polling(none_stop=True)
    # ConnectionError and ReadTimeout because of possible timout of the requests library
    # TypeError for moviepy errors
    # maybe there are others, therefore Exception
    except Exception as e:
        print('\n\n',e,'\n\n')
        time.sleep(1)
# if __name__ == '__main__':
#     bot.polling(none_stop=True)
